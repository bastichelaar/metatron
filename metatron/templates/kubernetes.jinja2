{#
  Service descriptor template for kubernetes.
  Renders YAML

  Args:
  - metadata (pyhocon.ConfigTree)

  TODO:
  - pass through of annotations (separate namespace?)
  - optional blocks, i.e. if health check defined, add it, etc.
  - error handling
  - add other deploy time metadata annotations (build time?, jenkins build number?)
  - add metadata support for number of replicas
  - pre-deploy commands (i.e. topic creation, index creation)
  - readiness checks
  - post-deploy tasks?
  - rolling upgrades
  - add k8s resource limits
  - horizontal pod autoscaling

#}
apiVersion: v1
kind: Service
metadata:
  name: {{ metadata['meta.attributes.id'] }}
  labels:
{% for key, value in metadata['meta.attributes'].items() %}
    meta.attributes.{{ key }}: "{{ value }}"
{% endfor %}
{# TODO: insert annotations section #}
spec:
  selector:
    service: {{ metadata['meta.attributes.id'] }}
  type: ClusterIP
  ports:
{% for port in metadata['meta.ports'].iterkeys() %}
{% set mapping = metadata['meta.ports'][port] %}
  - name: {{ port }}
    port: {{ mapping['service'] }}
    targetPort: {{ mapping['container'] }}
{% endfor %}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ metadata['meta.attributes.id'] }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: "{{ metadata['meta.attributes.id'] }}"
{% for key, value in metadata['meta.attributes'].items() %}
        meta.attributes.{{ key }}: "{{ value }}"
{% endfor %}
{# TODO: insert annotations section #}
    spec:
      containers:
      - image: {{ metadata['meta.attributes.image'] }}
        name: {{ metadata['meta.attributes.id'] }}
        ports:
{% for port in metadata['meta.ports'].iterkeys() %}
{% set mapping = metadata['meta.ports'][port] %}
        - name: {{ port }}
          containerPort: {{ mapping['container'] }}
{% endfor %}
        livenessProbe:
          httpGet:
            path: {{ metadata['meta.checks.health.endpoint'] }}
            port: {{ metadata['meta.checks.health.port'] }}
          periodSeconds: 30
          initialDelaySeconds: 15
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
